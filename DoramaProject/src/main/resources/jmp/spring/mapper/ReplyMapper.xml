<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jmp.spring.mapper.ReplyMapper">



<update id="updateReplyCnt">
update tbl_board set replycnt = (select count(*) from tbl_reply where bno = #{bno}) where bno = #{bno}
</update>

<insert id="insert" ><!-- 동영상 댓글입력 쿼리 -->
insert into video_reply
(rno, vno, id, content, writer, regdate) 
values (seq_video_reply.nextval, #{vno}, #{id}, #{content}, #{writer}, sysdate)
</insert>

<select id="get" resultType="jmp.spring.vo.ReplyVo">

select 
 row_num, rno, content, writer, regdate, re_rno,id

 from 
 (
 select ROW_NUMBER() OVER (order by rno desc) as row_num, a.* from video_reply a  where re_rno is null
 
 )
 where vno= #{vno} and row_num >(#{cri.pageNum}-1) * #{cri.amount}  and row_num <![CDATA[ <= ]]>#{cri.pageNum} * #{cri.amount} 

<!-- 
select 
 rno, content, writer, regdate, re_rno

 from video_reply where vno= #{vno} order by rno desc -->
</select>
<select id="getRe_reply" resultType="jmp.spring.vo.ReplyVo">
select *from video_reply where re_rno is not null order by rno asc

</select>


<select id="getReplyTotal" resultType="int">
select COUNT(*) from video_reply
 where vno = #{vno} and re_rno is null

</select>

<select id="getSeq_Currval" resultType="int">
select seq_video_reply.currval from dual
</select>

<update id="setRe_rno">
update video_reply set re_rno = #{re_rno} where rno= #{rno}

</update>



<select id="getList" resultType="jmp.spring.vo.ReviewVo">


<!-- select row_num, rno, bno, reply, replyer, replydate, updatedate,
case
 when to_char(sysdate,'yyyymmdd') = to_char(updatedate,'yyyymmdd')
 then to_char(updatedate, 'hh.mi.ss')
 else to_char(updatedate, 'yyyy/mm/dd')
end updatedate
from 
( 
 select 
row_number() over(order by a.rno  desc ) row_num, a.*


 from tbl_reply a where bno = #{bno} order by rno  desc 

 )
where row_num >(#{cri.pageNum}-1) * #{cri.amount}  and row_num<![CDATA[ <= ]]>#{cri.pageNum} * #{cri.amount}  -->

select row_num, rno, content, writer, regdate, rating, id
from (
select
ROW_NUMBER() over (order by a.rno desc) row_num, a.* from
contents_review a where cno = #{cno} order by rno desc
)
where row_num >(#{cri.pageNum}-1) * #{cri.amount}  and row_num <![CDATA[ <= ]]>#{cri.pageNum} * #{cri.amount}


<!--  select 
 rno, bno, reply, replyer, replydate, updatedate,
case
 when to_char(sysdate,'yyyymmdd') = to_char(updatedate,'yyyymmdd')
 then to_char(updatedate, 'hh.mi.ss')
 else to_char(updatedate, 'yyyy/mm/dd')
end


 from tbl_reply where bno= #{bno} order by rno desc
 -->


<!-- select * from 
( 
 select 
row_number() over(order by a.rno  desc ) row_num, a.*,
case
 when to_char(sysdate,'yyyymmdd') = to_char(updatedate,'yyyymmdd')
 then to_char(updatedate, 'hh.mi.ss')
 else to_char(updatedate, 'yyyy/mm/dd')
end

 from tbl_reply a where bno = #{bno} order by rno  desc 

 )
where row_num >(#{cri.pageNum}-1) * #{cri.amount}  and row_num<![CDATA[ <= ]]>#{cri.pageNum} * #{cri.amount}  -->


</select>


<update id="update">
update tbl_reply set reply= #{reply}, replyer= #{replyer}, updatedate= sysdate where rno= #{rno}
</update>

<delete id="remove">
delete   video_reply where rno=#{rno}
</delete>


<select id="getTotal" resultType="int">
select COUNT(*) from contents_review
 where cno = #{cno}

</select>

<insert id="addReview">
insert into contents_review (rno,content,writer,regdate,rating,cno,id) values(SEQ_REVIEW.nextval,#{content},#{writer},sysdate,#{rating},#{cno},#{id})
</insert>

<select id="getReview" resultType="jmp.spring.vo.ReviewVo">

select * from CONTENTS_REVIEW where cno = #{cno} ORDER BY RNO DESC
</select>
<select id="getReviewBy" resultType="jmp.spring.vo.ReviewVo">

select * from CONTENTS_REVIEW
</select>

<select id="getReviewRating" resultType="int">
SELECT ROUND(AVG(RATING)) FROM contents_review WHERE CNO=#{cno}
</select>

<update id="setContentRating">
update t_contents set rating =#{rating} where cno = #{cno}
</update>


</mapper>